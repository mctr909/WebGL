<html><head>
<script id="shader-vs" type="x-shader/x-vertex">
    attribute vec2 aPos;
    attribute vec2 aTexCoord;
    varying vec2 pos;
    void main() {
        gl_Position = vec4(aPos, 0.0, 1.0);
        pos = aTexCoord;
    }
</script>
<script id="shader-fs-show" type="x-shader/x-fragment">
    precision highp float;
    uniform sampler2D field;
    varying vec2 pos;
    const float GAMMA = 1.0/2.0;
    void main() {
        float force = texture2D(field, pos).w;
        if(force > 0.0) {
            force = ((GAMMA+1.0)*force)/(force+GAMMA);
            gl_FragColor = vec4(force, 0.0, 0.0, 1.0);
        } else {
            force = -force;
            force = ((GAMMA+1.0)*force)/(force+GAMMA);
            gl_FragColor = vec4(0.0, 0.0, force, 1.0);
        }
    }
</script>
<script id="source-fs" type="x-shader/x-fragment">
    precision highp float;
    uniform sampler2D field;
    uniform sampler2D field_input;
    uniform mat2 rot;
    uniform float r_scale;
    varying vec2 pos;
    const float h = 1.0/__GRID_SIZE__.0;
    const float dh = 1.0/__DATA_SIZE_RADIX2__.0;
    const vec2 ORIGIN = vec2(0.5, 0.5);
    void main() {
        vec4 f = texture2D(field, pos);
        f.w = 0.0;
        for(int i=0; i<__DATA_SIZE__; i++) {
            vec4 magnet = texture2D(field_input, vec2(float(i)*dh, 0.0));
            vec2 r = rot * magnet.xy - pos.xy + ORIGIN;
            vec2 mu = rot * magnet.zw;
            float len = length(r);
            len = max(len, h);
            len *= r_scale;
            f.w += dot(r, mu) / (len*len);
        }
        f.w = clamp(f.w, -1.0, 1.0);
        gl_FragColor = f;
    }
</script>
<script id="force-fs" type="x-shader/x-fragment">
    precision highp float;
    uniform sampler2D field;
    uniform float c;
    varying vec2 pos;
    const float h = 1./__GRID_SIZE__.;
    void main() {
        vec4 t0 = texture2D(field, pos);
        gl_FragColor = t0;
    }
</script>
<script type="text/javascript" src="script/render.js"></script>
<script type="text/javascript" src="magnet.js"></script>
</head>
<body onload="onLoad('c')">
    &beta;<input size="2" value="10" onchange="setBu( this.value )">
    interval<input size="1" value="0" onchange="setDelay( this.value )">
    fps:<span size="1" id="framerate"></span><br>
    <button onclick="reset()">Reset</button>
    <input type="button" onclick="run()" value="Stop" size="1" id="runBtn"/><br>
    <input type="range" min="2" max="20" value="2" id="r_scale" style="width:200px;"/><br>
    <canvas id="c" width="256" height="256"></canvas>
</body>
</html>
